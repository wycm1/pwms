<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pwms.dao.NoticeTheroyContructionMapper" >
  <resultMap id="BaseResultMap" type="com.pwms.pojo.NoticeTheroyContruction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="dateline" property="dateline" jdbcType="DATE" javaType="java.sql.Date"/>
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <!-- <result column="type" property="type" jdbcType="INTEGER" /> -->
    <association property="articletype" javaType="com.pwms.pojo.Articletype">
    	<!-- 两个表的字段如果有一样  查询出来一定要将字段重命名  否则赋值会出现问题-->
    	<id column="id1" property="id" jdbcType="INTEGER" />
	    <result column="value" property="value" jdbcType="VARCHAR" />
	    <result column="pid" property="pid" jdbcType="INTEGER" />
	    <result column="linkname" property="linkname" jdbcType="VARCHAR" />
    </association> 
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pwms.pojo.NoticeTheroyContruction" extends="BaseResultMap" >
    <result column="contents" property="contents" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, summary, dateline, user_id, type
  </sql>
  <sql id="Blob_Column_List" >
    contents
  </sql>
  <sql id="article_articletype">
  	n.id,n.title,n.summary,n.dateline,n.user_id,a.id id1,a.value,a.pid,a.linkname
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="article_articletype" />
    ,
    <include refid="Blob_Column_List" />
    from notice_theory_construction n,articletype a
    where n.type = a.id and n.id = #{id,jdbcType=INTEGER}
  </select> 
   <select id="selectByType" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="article_articletype"/>
    from notice_theory_construction n,articletype a
    where n.type = a.id and type = #{type,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="article_articletype"/>
    from notice_theory_construction n,articletype a
    where n.type=a.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice_theory_construction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pwms.pojo.NoticeTheroyContruction" >
    insert into notice_theory_construction (id, title, summary, 
      dateline, user_id, type, 
      contents)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{dateline,jdbcType=DATE}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{contents,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pwms.pojo.NoticeTheroyContruction" >
    insert into notice_theory_construction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="dateline != null" >
        dateline,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="contents != null" >
        contents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="dateline != null" >
        #{dateline,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="contents != null" >
        #{contents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pwms.pojo.NoticeTheroyContruction" >
    update notice_theory_construction
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="dateline != null" >
        dateline = #{dateline,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="contents != null" >
        contents = #{contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pwms.pojo.NoticeTheroyContruction" >
    update notice_theory_construction
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      dateline = #{dateline,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      contents = #{contents,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pwms.pojo.NoticeTheroyContruction" >
    update notice_theory_construction
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      dateline = #{dateline,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
