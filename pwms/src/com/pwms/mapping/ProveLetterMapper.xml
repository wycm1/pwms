<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pwms.dao.ProveLetterMapper" >
  <resultMap id="BaseResultMap" type="com.pwms.pojo.ProveLetter" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="orign_unit" property="orignUnit" jdbcType="VARCHAR" />
    <result column="party_member_type" property="partyMemberType" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="DATE" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, orign_unit, party_member_type, publish_date, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from prove_letter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from prove_letter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pwms.pojo.ProveLetter" >
    insert into prove_letter (id, name, sex, 
      orign_unit, party_member_type, publish_date, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{orignUnit,jdbcType=VARCHAR}, #{partyMemberType,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pwms.pojo.ProveLetter" >
    insert into prove_letter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="orignUnit != null" >
        orign_unit,
      </if>
      <if test="partyMemberType != null" >
        party_member_type,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="orignUnit != null" >
        #{orignUnit,jdbcType=VARCHAR},
      </if>
      <if test="partyMemberType != null" >
        #{partyMemberType,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pwms.pojo.ProveLetter" >
    update prove_letter
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="orignUnit != null" >
        orign_unit = #{orignUnit,jdbcType=VARCHAR},
      </if>
      <if test="partyMemberType != null" >
        party_member_type = #{partyMemberType,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pwms.pojo.ProveLetter" >
    update prove_letter
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      orign_unit = #{orignUnit,jdbcType=VARCHAR},
      party_member_type = #{partyMemberType,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>